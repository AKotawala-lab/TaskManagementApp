name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  AZURE_WEBAPP_NAME: "ad-demo-taskmanagementapp"
  AZURE_WEBAPI_PACKAGE_PATH: "./publish"
  AZURE_WEBUI_PACKAGE_PATH: "./publish/wwwroot"
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install dependencies for backend
        run: dotnet restore ./TaskManagementApp.WebAPI/TaskManagementApp.WebAPI.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore ./TaskManagementApp.WebAPI/TaskManagementApp.WebAPI.csproj

      - name: Test
        run: dotnet test ./TaskManagementApp.UnitTests/TaskManagementApp.UnitTests.csproj --no-build --filter "Category!=Exclude" --verbosity normal

      - name: Publish backend
        run: dotnet publish ./TaskManagementApp.WebAPI/TaskManagementApp.WebAPI.csproj --configuration Release --no-build --output '${{ env.AZURE_WEBAPI_PACKAGE_PATH }}'

      - name: Install dependencies for frontend
        run: npm install --prefix
        working-directory: ./TaskManagementApp.UI

      - name: Build
        run: npm run build --if-present --prefix
        working-directory: ./TaskManagementApp.UI

      - name: Create wwwroot directory
        run: mkdir -p ./publish/wwwroot

      - name: List contents of publish directory
        run: ls -l ./publish

      - name: List contents of wwwroot directory
        run: ls -l ./publish/wwwroot

      - name: List contents of dist directory
        run: ls -l ./TaskManagementApp.UI/dist/task-management-app.ui
      
      - name: Copy frontend build to backend publish folder
        run: cp -r ./TaskManagementApp.UI/dist/task-management-app.ui/* ./publish/wwwroot  

      - name: List contents of wwwroot directory
        run: ls -l ./publish/wwwroot
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}  # Replace with your App Service name
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: "${{ env.AZURE_WEBAPI_PACKAGE_PATH }}"
